虽然采纳了 ANSI/ISO标准以后C语言自身不再发生变化。但是，从某种意义上来说，随着 基于C的新式语言的产生，C语言的演变还在继续。新式语言包括有Concurrent C和Objective C, 以及最著名的C++语言。^〇C++语言是贝尔实验室的Bjame Stroustrup设计的，它在许多方面 对C语言进行了扩展，尤其是增加了支持面向对象编程的特性。
本书中关于C语言的描述都是基于ANSI/ISO标准的。但是，由于许多用旧版C编写的“现实 世界”的程序一直在使用，所以我们不可能完全忽视经典C。附录C列出了标准C和经典C之间 的主要差异。如果你遇到旧版C编写的程序，那么这个附录将会帮你理_这些程序。
1.1.3	C++语 g
随着C++语言的迅速普及，在不久的将来你很可能会用C++语言编写程序。果真如此，为何 还要如此费心学习C语言呢？首先，C++语言比C语言更加难学，在掌握复杂的C++语言（或任 何其他源于C的编程语言）之前，最好'是先精通C语言；其次，在我们身边存在着大量的C语言 代码，这就需要会阅读和维护这些代码；最后，不是每个人都喜欢改用C++语言编程，例如， 编写相对小规模程序的人就不会从C++语言中获得多少好处。
倾向于先学C++语言的主要论据是，在使用C++语言时，人们要避免采用C语言的编程习惯， 以至于不得不像“从未学过”一样。读者会发现本书通过强调数据抽象、信息隐藏和其他在C++ 语言中扮演重要角色的原理，很好地避免了这一问题。C++语言包含了C语言的全部特性，因此
