Ken Thompson最初设计的UNIX操作系统就是用汇编语言编写的。为了克服汇编语言编 写效率低下的缺点，Ken Thompson在BCPL的基础上设计了一种高级程序语言，并把它命名 为B语言。B语言是一种无类型的语言，更加便于编写系统软件，它直接对机器码操作，这一 点和后来的C语言有很大不同。作为系统软件编程语言的第一个应用，Ken Thompson还使用 B语言重写了其自身的解释程序。但是B语言仍然过于简单，因为它采用解释模式而非编译模 式。这些设计缺陷，使它在内存的限制面前一筹莫展。
C语言是由著名的计算机科学家Dennis Ritchie创造的，其历史可以追溯到ALGOL 60。 ALGOL 60,也称为A语言，是纯粹的面向描述计算过程的语言。虽然A语言并没有被广泛使 用，但它引入的分程序结构、递归、动态、局部性概念等思想，对后来的程序设计语言影响深 远。1963年，英国剑桥大学在A语言的基础上设计了 CPL (Combined Programming Language) 语言。CPL语言比ALGOL 60更接近硬件，但由于过于复杂而难以实现。1967年，剑桥大学 的 Martin Richards 简化了 CPL,设计了 BCPL (Basic Combined Programming Language)语言。
C语言的直接前身B语言就是从BCPL发展而来的。1969年，Dennis Ritchie和另一名计 算机科学家Ken Thompson在贝尔实验室从事DEC PDP-7计算机的研究。Ken Thompson为DEC PDP-7计算机设计了一个操作系统软件，也就是最早的UNIX操作系统。当时，在DEC PDP-7 上写程序很困难，只能用很底层、很高深的汇编语言。汇编语言依赖于计算机硬件，编写的程 序不具可读性和可移植性，而且难以调试。
在1972年至1973年间，Dennis Ritchie改进了 B语言，为其添加了数据类型的概念，他 将原来的解释程序改写为可以直接生成机器代码的编译程序，并将其命名为C语言。C语言既 保持了 BCPL语言和B语言精练、接近硬件的优点，又克服了它们过于简单、缺少数据类型等 缺点。最初的C语言只是为了描述和实现UNIX操作系统而设计的。1973年，Ken Thompson
和Dennis Ritchie在PDP-l 1机上用C语言重新改写了 UNIX操作系统的内核，即UNIX第5版。
