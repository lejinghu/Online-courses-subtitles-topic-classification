当心灰意冷的贝尔实验室的专家们撤离Multics工程后，他们又去寻找其他任务。其中 一位名叫Ken Thompson的研究人员对另一个操作系统很感兴趣，他为此好几次向贝尔管理 层提议，但均遭否决。在等待官方批准时，Thompson和他的同事Dennis Ritchie自娱自乐， 把Thompson的“太空旅行”软件移植到不太常用的PDP-7系统上。太空旅行软件模拟太阳 系的主要星体，把它们显示在图形屏幕上，并创建了一架航天飞机，它能够飞行并降落到各 个行星上。与此同时，Thompson加紧工作，为PDP-7编写了一个简易的新型操作系统。它 比Multics简单得多，也轻便得多。整个系统都是用汇编语言编写的。Brian Kemighan在1970 年给它取名为UNIX,自嘲地总结了从Multics中获得的那些不应该做的教训。图1-1描述了 早期C、UNIX和相关硬件系统的关系。
听上去有些荒谬，C语言的产生竟然源于一个失败的项目。1969年，通用电气、麻省理 工学院和W尔实验室联合创立了一个庞大的项目——Multics工程。该项目的目的是创建一个
操作系统，但显然遇到了麻烦：它不但无法交付原先所承诺的快速而便捷的在线系统，甚至 连一点有用的东西都没有弄出来。虽然开发小组最终勉强让Multics开动起来，但他们还是 陷入了泥淖，就像IBM在OS/360上面一样。他们试图建立一个非常巨大的操作系统，能够 应用于规模很小的硬件系统中。Multics成了总结工程教训的宝库，但它同时也为C语言体现 “小即是美”铺平了道路。
1965-7	1969	1971	1972- 3
图M 早期C、UNIX和相关的硬件系统
当心灰意冷的贝尔实验室的专家们撤离Multics工程后，他们又去寻找其他任务。其中 一位名叫Ken Thompson的研究人员对另一个操作系统很感兴趣，他为此好几次向贝尔管理 层提议，但均遭否决。在等待官方批准时，Thompson和他的同事Dennis Ritchie自娱自乐， 把Thompson的“太空旅行”软件移植到不太常用的PDP-7系统上。太空旅行软件模拟太阳 系的主要星体，把它们显示在图形屏幕上，并创建了一架航天飞机，它能够飞行并降落到各 个行星上。与此同时，Thompson加紧工作，为PDP-7编写了一个简易的新型操作系统。它 比Multics简单得多，也轻便得多。整个系统都是用汇编语言编写的。Brian Kemighan在1970 年给它取名为UNIX,自嘲地总结了从Multics中获得的那些不应该做的教训。图1-1描述了 早期C、UNIX和相关硬件系统的关系。
听上去有些荒谬，C语言的产生竟然源于一个失败的项目。1969年，通用电气、麻省理 工学院和W尔实验室联合创立了一个庞大的项目——Multics工程。该项目的目的是创建一个
操作系统，但显然遇到了麻烦：它不但无法交付原先所承诺的快速而便捷的在线系统，甚至 连一点有用的东西都没有弄出来。虽然开发小组最终勉强让Multics开动起来，但他们还是 陷入了泥淖，就像IBM在OS/360上面一样。他们试图建立一个非常巨大的操作系统，能够 应用于规模很小的硬件系统中。Multics成了总结工程教训的宝库，但它同时也为C语言体现 “小即是美”铺平了道路。
1965-7	1969	1971	1972- 3
图M 早期C、UNIX和相关的硬件系统
当心灰意冷的贝尔实验室的专家们撤离Multics工程后，他们又去寻找其他任务。其中 一位名叫Ken Thompson的研究人员对另一个操作系统很感兴趣，他为此好几次向贝尔管理 层提议，但均遭否决。在等待官方批准时，Thompson和他的同事Dennis Ritchie自娱自乐， 把Thompson的“太空旅行”软件移植到不太常用的PDP-7系统上。太空旅行软件模拟太阳 系的主要星体，把它们显示在图形屏幕上，并创建了一架航天飞机，它能够飞行并降落到各 个行星上。与此同时，Thompson加紧工作，为PDP-7编写了一个简易的新型操作系统。它 比Multics简单得多，也轻便得多。整个系统都是用汇编语言编写的。Brian Kemighan在1970 年给它取名为UNIX,自嘲地总结了从Multics中获得的那些不应该做的教训。图1-1描述了 早期C、UNIX和相关硬件系统的关系。
听上去有些荒谬，C语言的产生竟然源于一个失败的项目。1969年，通用电气、麻省理 工学院和W尔实验室联合创立了一个庞大的项目——Multics工程。该项目的目的是创建一个
操作系统，但显然遇到了麻烦：它不但无法交付原先所承诺的快速而便捷的在线系统，甚至 连一点有用的东西都没有弄出来。虽然开发小组最终勉强让Multics开动起来，但他们还是 陷入了泥淖，就像IBM在OS/360上面一样。他们试图建立一个非常巨大的操作系统，能够 应用于规模很小的硬件系统中。Multics成了总结工程教训的宝库，但它同时也为C语言体现 “小即是美”铺平了道路。
1965-7	1969	1971	1972- 3
图M 早期C、UNIX和相关的硬件系统
