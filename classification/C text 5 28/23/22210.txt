在例8.3中给出了一些复杂声明，并解释了其含义。细心的读者会问：为什么非要那样解释呢？ 那样解释的依据是什么呢？难道不能有另外的解释吗？对最后的一个问题，回答是否定的。即，没 有另外的解释，否则声明就有二义性。至于前面两个问题，则涉及对声明理解的方法，主要是对复 杂声明的理解。B.W.Kemighan和D.M.Ritchie曾经说过：“毫无疑问，复杂声明的确产生于实践， 但知道如何去理解它们，以及在必要时知道如何去创建它们却是非常重要的”。可以这样说，对复 杂声明理解的精确程度和深度，以及对复杂声明的创建和驾驭的熟练程度是衡量一个C语言程序设 计者语言素质的重要指标之一。
算法是先根据给定的year算出该年是平年还是闰年；通过查表，对当月month前每个月份的 天数和当月天数day进行累加，并返回累加天数。m〇nth_day函数以指向数组元素的指针p为形参， 调用时以数组打头元素的地址day_tab[0]为实参。算法是先根据给定的year算出该年是平年还是闰 年；再按照给出的天数yearday，通过查表逐月减每月天数；当剩余天数不足1个月天数时，逐月 减的次数加1即为当月月份，而剩余天数则为当月天数；pmonth指向当月月份，*pmonth即mm; pday指向当月天数，*pday即dd。因此，当month_day函数调用结束时，函数main中的变量mm 和dd存放的即是计算出来的某月和某日。
11.2用typedef定义类型表达式
11.2.1类型表达式
总的来看，c语言中的表达式可以分为两类。一类是可求值表达式，称为值表达式，它的基本 特征是可以被CPU处理和计算。值进一步又分为左值和右值，地址是左值的特征之一，但仅仅是 形成左值的必要条件，数组名就是一个典型的例子。它虽然表征数组的首地址，但是却不能被赋值。 左值的另外一个特征是必须在内存中分配有内存单元，这样才能够被赋值。
