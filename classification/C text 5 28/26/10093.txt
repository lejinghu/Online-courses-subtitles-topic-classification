在实际应用中，需要在程序中定义这样一种变量：在程序运行中，有时该变量用来存 储一种类型的数据，有时该变量用来存储另一种类型的数据，后存储的类型数据会覆盖前 一次存储的类型数据。这种问题的实质是把不同类型的数据存放到同一段内存单元中， 这些不同类型的数据分时共享同一段内存单元。例如从同一个内存地址（如OxffeeOOOO) 开始的内存单元中，可以存放一个字符型（char)数据、一个整型（int)数据、一个实型 (float)数据，因为有些内存单元是共有的，显然，这三个数据不能都在这片内存中同时存 在，在某一时刻只可以存放这三个类型数据中的一个。这种用来分时存储不同类型数据 的变量就是“共用体”类型变量。同结构体变量的定义相似，若需定义共用体类型的变量， 也必须先定义共用体类型，然后再用已定义的共用体类型去定义“共用体”类型的变量。 共用体与结构体不同的是：结构体类型是异址的，而共用体类型是同址的。也就是说，结 构体长度是各个成员长度之和，而共用体所有成员共享内存的一个区域（首地址相同），共 用体长度是成员列表中长度最长的成员长度。
7.8共用体
7.8.1共用体概念
7.8.2共用体类型的定义
定义共用体类型的关键字是“union”。同结构体类型的定义方式相似，共用体类型
在实际应用中，需要在程序中定义这样一种变量：在程序运行中，有时该变量用来存 储一种类型的数据，有时该变量用来存储另一种类型的数据，后存储的类型数据会覆盖前 一次存储的类型数据。这种问题的实质是把不同类型的数据存放到同一段内存单元中， 这些不同类型的数据分时共享同一段内存单元。例如从同一个内存地址（如OxffeeOOOO) 开始的内存单元中，可以存放一个字符型（char)数据、一个整型（int)数据、一个实型 (float)数据，因为有些内存单元是共有的，显然，这三个数据不能都在这片内存中同时存 在，在某一时刻只可以存放这三个类型数据中的一个。这种用来分时存储不同类型数据 的变量就是“共用体”类型变量。同结构体变量的定义相似，若需定义共用体类型的变量， 也必须先定义共用体类型，然后再用已定义的共用体类型去定义“共用体”类型的变量。 共用体与结构体不同的是：结构体类型是异址的，而共用体类型是同址的。也就是说，结 构体长度是各个成员长度之和，而共用体所有成员共享内存的一个区域（首地址相同），共 用体长度是成员列表中长度最长的成员长度。
7.8共用体
7.8.1共用体概念
7.8.2共用体类型的定义
定义共用体类型的关键字是“union”。同结构体类型的定义方式相似，共用体类型
