算法思想：ddete_C用与字符变量c值相同的字符的后面一个字符来对其进行覆盖的方法，从 字符串s中删除所有与给定字符相同的字符。
return strlen (s);	/★返回去掉空白字符后的串长度★/
本函数的算法思想是：先用计数器j计算字符串首部空白字符的个数。然后用计数器k计算字 符串尾部空白字符的个数。因此，去掉首尾空白字符后的实际字符个数就是num=l-k-j,打头的实 际字符的下标是j。用s[j]替换S[0],s[j+1]替换s[l]，…，s[num+j]替换s[nUm-l],就将实际字符字符串 前移并覆盖首部空白字符。s[num]='\0’实际上是去掉了尾部空白字符，并确定了新串的终止位置。 【例7.17】编写从字符串s中删除所有与给定字符相同的字符的ddete_C函数。
void delete_c(char s[],char c)
{ int j=0,k=0;
算法思想：ddete_C用与字符变量c值相同的字符的后面一个字符来对其进行覆盖的方法，从 字符串s中删除所有与给定字符相同的字符。
return strlen (s);	/★返回去掉空白字符后的串长度★/
本函数的算法思想是：先用计数器j计算字符串首部空白字符的个数。然后用计数器k计算字 符串尾部空白字符的个数。因此，去掉首尾空白字符后的实际字符个数就是num=l-k-j,打头的实 际字符的下标是j。用s[j]替换S[0],s[j+1]替换s[l]，…，s[num+j]替换s[nUm-l],就将实际字符字符串 前移并覆盖首部空白字符。s[num]='\0’实际上是去掉了尾部空白字符，并确定了新串的终止位置。 【例7.17】编写从字符串s中删除所有与给定字符相同的字符的ddete_C函数。
void delete_c(char s[],char c)
{ int j=0,k=0;
