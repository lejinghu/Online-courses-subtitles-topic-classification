除char类型之外，C语言也支持宽字符类型wchar_t。此类型足以表示实现版本所支 持的“扩展字符集”中任何字符（见第1章“宽字符和多字节字符”）。对应之下，有两 大类函数可以进行字符串和字符的输入和输出：字节字符I/O函数、宽字符I/O函数。宽 字符丨/〇函数用来处理wchar_t类型的字符。每个流都有导向功能（oriemation),决 定使用哪一类函数才是合适的。 打开文件时并未决定其流的导向。如果第一个存取动作使用“字节字符1/0函数”，那么 从此以后，此流就变成字节导向的。如果第一个存取动作使用“宽字符I/O函数”，那么 从此以后，此流就变成宽字符导向的。标准流（stdin、stdout、sLderr)的导向也类 似，在程序一开始并没有决定其导向是什么。
本节描述的函数使用所创建的流进行数据的“接收”和“发送”操作。首先，还有一个 细节要考虑：一个被打开的流可以被用于处理“字节字符”或“宽字符”。
字节导向和宽字符导向流
在任何时候都可以调用fwide《）函数来确定某个流的导向。在第一个I/O操作之前，也 可以使用fwide()设定一个新流的导向。当固定流的导向之后，如想改变流的导向必须 先使用f reopen ()函数重新打开该流。
写入“宽导向串流”的宽字符会被存储在文件中，此文件和多字节字符相关。读写函数 会“在wchar_t字符和多字节宇符之间”进行隐式转换。此转换可能是有状态的。换句 话说，多字节编码中某个字节的值可能受前面“控制字符”的影响，控制字符会改变字 符序列的移位状态或转换状态。为此，每个宽导向的流都具有相关的mbstate_t类型的 对象，此对象存储目前的多字节转换状态。fgetpos()和fsetpos()函数用来处理文件 位置修饰符，可以针对某个文件位置存储和恢复转换状态。
除char类型之外，C语言也支持宽字符类型wchar_t。此类型足以表示实现版本所支 持的“扩展字符集”中任何字符（见第1章“宽字符和多字节字符”）。对应之下，有两 大类函数可以进行字符串和字符的输入和输出：字节字符I/O函数、宽字符I/O函数。宽 字符丨/〇函数用来处理wchar_t类型的字符。每个流都有导向功能（oriemation),决 定使用哪一类函数才是合适的。 打开文件时并未决定其流的导向。如果第一个存取动作使用“字节字符1/0函数”，那么 从此以后，此流就变成字节导向的。如果第一个存取动作使用“宽字符I/O函数”，那么 从此以后，此流就变成宽字符导向的。标准流（stdin、stdout、sLderr)的导向也类 似，在程序一开始并没有决定其导向是什么。
本节描述的函数使用所创建的流进行数据的“接收”和“发送”操作。首先，还有一个 细节要考虑：一个被打开的流可以被用于处理“字节字符”或“宽字符”。
字节导向和宽字符导向流
在任何时候都可以调用fwide《）函数来确定某个流的导向。在第一个I/O操作之前，也 可以使用fwide()设定一个新流的导向。当固定流的导向之后，如想改变流的导向必须 先使用f reopen ()函数重新打开该流。
写入“宽导向串流”的宽字符会被存储在文件中，此文件和多字节字符相关。读写函数 会“在wchar_t字符和多字节宇符之间”进行隐式转换。此转换可能是有状态的。换句 话说，多字节编码中某个字节的值可能受前面“控制字符”的影响，控制字符会改变字 符序列的移位状态或转换状态。为此，每个宽导向的流都具有相关的mbstate_t类型的 对象，此对象存储目前的多字节转换状态。fgetpos()和fsetpos()函数用来处理文件 位置修饰符，可以针对某个文件位置存储和恢复转换状态。
