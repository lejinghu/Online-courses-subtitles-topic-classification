只要是在程序中，保持不变且使用频繁的字符就可以定义为字符型常量。这样能够避免不 小心修改了某个字符造成错误。如果将常用的字符数据定义为字符常量，则禁止修改该常量。 这样会减少错误的发生。单个字符类型的数据可以定义为字符型常量。例如，定义一个字符常 量的代码如下：
字符型常量和字符串型常量中的数据都是字符。字符型数据与字符串型数据的主要区别 是：用单引号括起来的单个字符是字符型数据，而用双引号括起来的一个或多个字符（一般 是多个）称为字符串型数据。字符型数据都可以作为字符型常量，字符串型数据都可以作为 字符串型常量。
1.为什么要使用字符增常黾和字符卑增常璜
const char CHAR='M';	/将字符’M'定义为字符常量/
定义字符常量的方法与定义整型常量的方法一样，都是在类型说明符前面增加一个const。 同理，字符串常量是有多个字符构成且保持不变的量。如果一个字符串多次出现且在程序 中保持不变，可以被定义为字符串常量。使用字符串常量能够避免出错和减少重复输人字符。 因为字符串是由多个字符组成的，如果在程序中多次出现，则需要定义一个字符串常量符号代 替这个字符串。这样做可以减少多次输人字符的麻烦，同时避免错误的发生。例如，如果程序 中经常用到字符串"C Program Language”，就需要将该字符串定义为字符串常量。
只要是在程序中，保持不变且使用频繁的字符就可以定义为字符型常量。这样能够避免不 小心修改了某个字符造成错误。如果将常用的字符数据定义为字符常量，则禁止修改该常量。 这样会减少错误的发生。单个字符类型的数据可以定义为字符型常量。例如，定义一个字符常 量的代码如下：
字符型常量和字符串型常量中的数据都是字符。字符型数据与字符串型数据的主要区别 是：用单引号括起来的单个字符是字符型数据，而用双引号括起来的一个或多个字符（一般 是多个）称为字符串型数据。字符型数据都可以作为字符型常量，字符串型数据都可以作为 字符串型常量。
1.为什么要使用字符增常黾和字符卑增常璜
const char CHAR='M';	/将字符’M'定义为字符常量/
定义字符常量的方法与定义整型常量的方法一样，都是在类型说明符前面增加一个const。 同理，字符串常量是有多个字符构成且保持不变的量。如果一个字符串多次出现且在程序 中保持不变，可以被定义为字符串常量。使用字符串常量能够避免出错和减少重复输人字符。 因为字符串是由多个字符组成的，如果在程序中多次出现，则需要定义一个字符串常量符号代 替这个字符串。这样做可以减少多次输人字符的麻烦，同时避免错误的发生。例如，如果程序 中经常用到字符串"C Program Language”，就需要将该字符串定义为字符串常量。
