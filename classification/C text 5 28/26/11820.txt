回想一下，C语言允许将字符变量声明为unsigned，从而可以避免这一 问题。也就是说，在将一个unsigned char变量转换为整数时，从来不会扩 展其符号；它的值总是大于或等于0的。对于典型的八位字符，一个有符号字 符变量的取值范围为-128至+丨27。一个无符号字符变量的取值范围为0至255。
每当将signed int或signed short int转换为更大规模的整数时， 符号都会在执行转换时扩展到左侧。这样可以确保一个取值为-5的short int，在转换为long int时，其取值仍然是-5。在将一个无符号整数转换为 更大规模的整数时，与我们预想的一样，不会发生符号扩展。
在某些系统中，字符被看作有符号量。这意味着，在将字符转换为整数时， 会发生符号扩展。只要使用的字符来自标准ASCII字符集，这一事实就绝对不 会导致问题。但是，如果使用的字符值不是来自标准字符集，那在将其转换为 整数时，就可能会扩展其符号。例如，在Mac上，字符常量 \377'被转换为 数值-1,这是因为在将其看作一个有符号的八位量时，它的值为负数。
如果希望强制对字符变量执行符号扩展，可以将这种变量声明为signed char类型。这就确保了在将字符值转换为整数时会进行符号扩展，即使在一 些默认不进行此类扩展的机器上也会进行这一扩展。
参数转换
回想一下，C语言允许将字符变量声明为unsigned，从而可以避免这一 问题。也就是说，在将一个unsigned char变量转换为整数时，从来不会扩 展其符号；它的值总是大于或等于0的。对于典型的八位字符，一个有符号字 符变量的取值范围为-128至+丨27。一个无符号字符变量的取值范围为0至255。
每当将signed int或signed short int转换为更大规模的整数时， 符号都会在执行转换时扩展到左侧。这样可以确保一个取值为-5的short int，在转换为long int时，其取值仍然是-5。在将一个无符号整数转换为 更大规模的整数时，与我们预想的一样，不会发生符号扩展。
在某些系统中，字符被看作有符号量。这意味着，在将字符转换为整数时， 会发生符号扩展。只要使用的字符来自标准ASCII字符集，这一事实就绝对不 会导致问题。但是，如果使用的字符值不是来自标准字符集，那在将其转换为 整数时，就可能会扩展其符号。例如，在Mac上，字符常量 \377'被转换为 数值-1,这是因为在将其看作一个有符号的八位量时，它的值为负数。
如果希望强制对字符变量执行符号扩展，可以将这种变量声明为signed char类型。这就确保了在将字符值转换为整数时会进行符号扩展，即使在一 些默认不进行此类扩展的机器上也会进行这一扩展。
参数转换
