当调用带有可变实参列表的函数时，编译器会在匹配省略号W全部参数上执行默认的实参提升 (>■9.3.1节)：把字符型值提升为整数，并且把float型值提升为double型值。这样的结果是va_arg 不会感觉到传递过来的是字符类型或float类型，因为提升后的参数将永远不会具有这些类型。
largest = va一arg(ap, int)；
在函数返回之前，要求用语句va_end(ap);进行“清扫”。（如果不返回，函数可能会再次 调用va_start并且遍历参数列表。）
26.1.1调用带有可变实参列表的函数
调用带有可变实参列表的函数是一个固有的风险提议。回溯到第3章就会发现给printf函 数和scanf函数传递错误参数是多么危险。其他带有可变实参列表的函数也同样容易出问题。
当调用带有可变实参列表的函数时，编译器会在匹配省略号W全部参数上执行默认的实参提升 (>■9.3.1节)：把字符型值提升为整数，并且把float型值提升为double型值。这样的结果是va_arg 不会感觉到传递过来的是字符类型或float类型，因为提升后的参数将永远不会具有这些类型。
largest = va一arg(ap, int)；
在函数返回之前，要求用语句va_end(ap);进行“清扫”。（如果不返回，函数可能会再次 调用va_start并且遍历参数列表。）
26.1.1调用带有可变实参列表的函数
调用带有可变实参列表的函数是一个固有的风险提议。回溯到第3章就会发现给printf函 数和scanf函数传递错误参数是多么危险。其他带有可变实参列表的函数也同样容易出问题。
