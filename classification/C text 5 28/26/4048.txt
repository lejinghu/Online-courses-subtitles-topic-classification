指针的算术运算具有一致性：如果处理的数据类型是比字符型占据更多存储空间的浮点 类型，并且p是一个指向浮点类型的指针，那么在执行p++后，p将指向下一个浮点数的地 址。因此，只需要将alloc和afree函数中所有的char类型替换为float类型，就可以 得到一个适用于浮点类型而非字符型的内存分配函数。所有的指针运算都会自动考虑它所指 向的对象的长度。
}
在上述程序段的声明中，指针p被初始化为指向s，即指向该字符串的第一个字符。while 循环语句将依次检查字符串中的每个字符，直到遇到标识字符数组结尾的字符'\0'为止。由 于p是指向字符的指针，所以每执行一次p++，p就将指向下一个字符的地址，p-s则表示 已经检查过的字符数，即字符串的长度。（字符串中的字符数有可能超过int类型所能表示的 最大范围。头文件<3七666^匕>中定义的类型ptrdiff_t足以表示两个指针之间的带符号差 值。但是，我们在这里使用size_t作为函数strlen的返回值类型，这样可以与标准库中 的函数版本相匹配。Size_t是由运算符sizeof返回的无符号整型。）
有效的指针运算包括相同类型指针之间的赋值运算；指针同整数之间的加法或减法运算; 指向相同数组中元素的两个指针间的减法或比较运算；将指针赋值为0或指针与0之间的比 较运算。其它所有形式的指针运算都是非法的，例如两个指针间的加法、乘法、除法、移位 或屏蔽运算；指针同float或double类型之间的加法运算；不经强制类型转换而直接将指 向一种类型对象的指针赋值给指向另一种类型对象的指针的运算（两个指针之一是void 类型的情况除外）。
5.5.字符指针与函数
