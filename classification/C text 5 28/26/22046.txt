ch先被初始化为'a'，接着字符变量ch的地址0x00161b2a被&操作取出并赋给字符指针变量pc。 因此，pc的值是0x00161b2a，即pc指向ch。在下一语句中，*pc表示间接访问pc所指的变量ch。 因此，*pc的值是'b',即ch的值最终是V。
char ch=,a',*pc=&ch； *pc='b'；
并且假设字符变量ch的地址是〇X〇0161b2a,试问ch, pc,以及*pc的值是什么？
显然，*pc='b';与ch=V;两个语句等价。因为*pc的操作结果就是变量ch。
在C语言中，单目&表示取地址操作，双目&表示按位与操作。单目*表是间访操作，而双目*表示 乘法操作。另外，也可以不作为操作符，而是作为类型修饰符出现。作为类型修饰符则将其 后的标识符修饰为指针类型。至于是何种类型的指针则要视其基类型而定。并且作为类型修饰符 一定是出现在声明语句中。在使用时一定要根据上下文或操作数的个数来正确理解它们的含义。
