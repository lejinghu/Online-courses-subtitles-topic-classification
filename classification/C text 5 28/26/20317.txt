在判断字符类型时，需要一个循环控制，在这里我们采用for循环，循环的开始条件是i=〇, 即从数组的第1个字符开始判断。循环的结束条件 是字符串结束，即当时循环结束。因此， for循环控制的代码如下：
分析：主要考察字符串的一些操作，例如，字符串的输入、字符串结束符的判断及字符数 组的灵活使用。首先定义一个字符数组text[80],通过gets函数接受一个字符串，系统会将该字 符串保存到数组text中。然后从字符数组的第1个字符开始，依次判断该字符是哪一种类型的 字符。如果该字符属于大写字母，则upper加1;如果是小写字母，则lower加1;如果是数字 字符，则digital加1;如果是空格字符，则space加1;如果是其他字符，则other加1。最后输 出各种类型的字符个数。
-对戍代码访9行
for(i=0;i<80&&text[i]!='\0';i++)
在每一次的for循环中，通过if-else选择语句 判断字符的类型即可。
在判断字符类型时，需要一个循环控制，在这里我们采用for循环，循环的开始条件是i=〇, 即从数组的第1个字符开始判断。循环的结束条件 是字符串结束，即当时循环结束。因此， for循环控制的代码如下：
分析：主要考察字符串的一些操作，例如，字符串的输入、字符串结束符的判断及字符数 组的灵活使用。首先定义一个字符数组text[80],通过gets函数接受一个字符串，系统会将该字 符串保存到数组text中。然后从字符数组的第1个字符开始，依次判断该字符是哪一种类型的 字符。如果该字符属于大写字母，则upper加1;如果是小写字母，则lower加1;如果是数字 字符，则digital加1;如果是空格字符，则space加1;如果是其他字符，则other加1。最后输 出各种类型的字符个数。
-对戍代码访9行
for(i=0;i<80&&text[i]!='\0';i++)
在每一次的for循环中，通过if-else选择语句 判断字符的类型即可。
在判断字符类型时，需要一个循环控制，在这里我们采用for循环，循环的开始条件是i=〇, 即从数组的第1个字符开始判断。循环的结束条件 是字符串结束，即当时循环结束。因此， for循环控制的代码如下：
分析：主要考察字符串的一些操作，例如，字符串的输入、字符串结束符的判断及字符数 组的灵活使用。首先定义一个字符数组text[80],通过gets函数接受一个字符串，系统会将该字 符串保存到数组text中。然后从字符数组的第1个字符开始，依次判断该字符是哪一种类型的 字符。如果该字符属于大写字母，则upper加1;如果是小写字母，则lower加1;如果是数字 字符，则digital加1;如果是空格字符，则space加1;如果是其他字符，则other加1。最后输 出各种类型的字符个数。
-对戍代码访9行
for(i=0;i<80&&text[i]!='\0';i++)
在每一次的for循环中，通过if-else选择语句 判断字符的类型即可。
