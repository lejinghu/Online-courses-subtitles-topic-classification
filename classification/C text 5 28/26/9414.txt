在实际问题中，一组数据往往具有不同的数据类型。例如，在学生登记表中，姓名应为 字符型；学号可为整型或字符型；年龄应为整型；性别应为字符型；成绩可为整型或实型。显 然不能用一个数组来存放这一组数据。因为数组中各元素的类型和长度都必须一致，以便于 编译系统处理。为了解决这个问题，C语言中给出了另一种构造数据类型一“结构 (structure) 〃或叫''结构体〃。它相当于其它高级语言中的记录。''结构〃是一种构造类型， 它是由若干''成员〃组成的。每一个成员可以是一个基本数据类型或者又是一个构造类型。结 构既是一种''构造〃而成的数据类型，那么在说明和使用之前必须先定义它，也就是构造它。 如同在说明和调用函数之前要先定义函数一样。
11结构体与共用体
11.1定义一个结构的一般形式
定义一个结构的一般形式为： struct结构名 {成员表列};
成员表列由若干个成员组成，每个成员都是该结构的一个组成部分。对每个成员也必须 作类型说明，其形式为：
在实际问题中，一组数据往往具有不同的数据类型。例如，在学生登记表中，姓名应为 字符型；学号可为整型或字符型；年龄应为整型；性别应为字符型；成绩可为整型或实型。显 然不能用一个数组来存放这一组数据。因为数组中各元素的类型和长度都必须一致，以便于 编译系统处理。为了解决这个问题，C语言中给出了另一种构造数据类型一“结构 (structure) 〃或叫''结构体〃。它相当于其它高级语言中的记录。''结构〃是一种构造类型， 它是由若干''成员〃组成的。每一个成员可以是一个基本数据类型或者又是一个构造类型。结 构既是一种''构造〃而成的数据类型，那么在说明和使用之前必须先定义它，也就是构造它。 如同在说明和调用函数之前要先定义函数一样。
11结构体与共用体
11.1定义一个结构的一般形式
定义一个结构的一般形式为： struct结构名 {成员表列};
成员表列由若干个成员组成，每个成员都是该结构的一个组成部分。对每个成员也必须 作类型说明，其形式为：
