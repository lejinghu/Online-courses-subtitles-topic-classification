_一个字符串常量都分别占用内存中一串连续的存储空间，这些连续的存储空间实际上就 是字符型一维数组。这些数组虽然没有名字，但C编译系统却以字符串常量的形式给出存放每 一字符串的存储空间的首地址。不同的字符串具有不同的起始地址。也就是说：在C语言中， 字符串常量被隐含处理成一个以'\〇’结尾的无名字符型一维数组。因此，若有以下定义：
虽然C语言中没有字符串数据类型，但却允许使用“字符串常量”。在第6章中已介绍过， 字符串常量是由双引号括起来的一串字符，在表示字符串常量时，不需要人为在其末尾加入’\〇'， 例如：字符串常量"Hello!"不必写成"Hello! \0" ,C编译程序将自动完成这一工作，在末尾添加 字符’\0_。
3.	C语言中字符串常量给出的是地址值
char * sp，s[ 10];
则以下赋值是不合法的：
_一个字符串常量都分别占用内存中一串连续的存储空间，这些连续的存储空间实际上就 是字符型一维数组。这些数组虽然没有名字，但C编译系统却以字符串常量的形式给出存放每 一字符串的存储空间的首地址。不同的字符串具有不同的起始地址。也就是说：在C语言中， 字符串常量被隐含处理成一个以'\〇’结尾的无名字符型一维数组。因此，若有以下定义：
虽然C语言中没有字符串数据类型，但却允许使用“字符串常量”。在第6章中已介绍过， 字符串常量是由双引号括起来的一串字符，在表示字符串常量时，不需要人为在其末尾加入’\〇'， 例如：字符串常量"Hello!"不必写成"Hello! \0" ,C编译程序将自动完成这一工作，在末尾添加 字符’\0_。
3.	C语言中字符串常量给出的是地址值
char * sp，s[ 10];
则以下赋值是不合法的：
