接下来希望读入运算符。因为运算符是一个字符（V、或7’）而不 是数字，所以将其读入字符变量operator中。％c格式字符告诉系统，由终 端读入下一个字符。格式字符串中的空格表明在输入时允许存在任意数目的空 格。这样，在键入这些值时，就可以用空格将操作数与运算符分隔开。但如果 指定了格式字符串"％f%c%f",那在键入的第一个数字和运算符之间不允许存 在空格。这是因为scanfO函数是用％〇格式字符读入一个字符的，输入中的 下一个字符就是被读入的字符，即使这个字符是空格。但是，应当注意到，在 一般情况下，scanf()函数在读入小数或浮点数时，总是会忽略前导空格。因 此，格式字符串"％f %c%f"会像上面的程序中一样有效。
scanf ()调用指定了三个待读入变量valuel、operator和value2的 值。浮点数可以用％【格式字符读入，这一格式字符也用于输出浮点数。在为表
达式的第一个操作数valuel变量读入数值时，使用的就是这一格式。
在键入第二个操作数并将其存储在变量value2中之后，程序接下来检测 operator是否为四个允许运算符之一。当找出正常匹配时，执行相应的 printf()语句，显示计算结果。随后，程序执行完毕。
这里该对程序的完整性说两句了。尽管前面的程序的确完成了预定任务， 但这个程序实际上并不完整，因为它没有考虑用户犯错的情况。例如，如果用 户在键入运算符时错误地键入了一个？，会发生什么情况呢？此时程序就只是 简单地“贯穿（fall through)” if语句，不会在终端上显示信息，告诉用户他 错误地键入了表达式。
接下来希望读入运算符。因为运算符是一个字符（V、或7’）而不 是数字，所以将其读入字符变量operator中。％c格式字符告诉系统，由终 端读入下一个字符。格式字符串中的空格表明在输入时允许存在任意数目的空 格。这样，在键入这些值时，就可以用空格将操作数与运算符分隔开。但如果 指定了格式字符串"％f%c%f",那在键入的第一个数字和运算符之间不允许存 在空格。这是因为scanfO函数是用％〇格式字符读入一个字符的，输入中的 下一个字符就是被读入的字符，即使这个字符是空格。但是，应当注意到，在 一般情况下，scanf()函数在读入小数或浮点数时，总是会忽略前导空格。因 此，格式字符串"％f %c%f"会像上面的程序中一样有效。
scanf ()调用指定了三个待读入变量valuel、operator和value2的 值。浮点数可以用％【格式字符读入，这一格式字符也用于输出浮点数。在为表
达式的第一个操作数valuel变量读入数值时，使用的就是这一格式。
在键入第二个操作数并将其存储在变量value2中之后，程序接下来检测 operator是否为四个允许运算符之一。当找出正常匹配时，执行相应的 printf()语句，显示计算结果。随后，程序执行完毕。
这里该对程序的完整性说两句了。尽管前面的程序的确完成了预定任务， 但这个程序实际上并不完整，因为它没有考虑用户犯错的情况。例如，如果用 户在键入运算符时错误地键入了一个？，会发生什么情况呢？此时程序就只是 简单地“贯穿（fall through)” if语句，不会在终端上显示信息，告诉用户他 错误地键入了表达式。
