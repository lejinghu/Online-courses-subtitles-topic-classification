对结构体或联合体中的成员访问只能是该成员所对应的整个内存单元。但是，如果要 访问结构体或联合体中的成员所对应内存单元的若干位，则必须要将结构体或联合体中的 成员定义成位域成员。所谓位域成员就是只占有有限几位的结构体或联合体成员。位域成 员是特殊的成员，它必须是整型或字符型变量（char、short、int,在VC下可为long),但 它可以只占有一个整型数据的某几位。
章
11.5位 域
在定义结构体或联合体类型时，只要在成员后面加上“：位数”，就将这个成员定义成 为位域成员。例如：
struct BitStruct {
对结构体或联合体中的成员访问只能是该成员所对应的整个内存单元。但是，如果要 访问结构体或联合体中的成员所对应内存单元的若干位，则必须要将结构体或联合体中的 成员定义成位域成员。所谓位域成员就是只占有有限几位的结构体或联合体成员。位域成 员是特殊的成员，它必须是整型或字符型变量（char、short、int,在VC下可为long),但 它可以只占有一个整型数据的某几位。
章
11.5位 域
在定义结构体或联合体类型时，只要在成员后面加上“：位数”，就将这个成员定义成 为位域成员。例如：
struct BitStruct {
