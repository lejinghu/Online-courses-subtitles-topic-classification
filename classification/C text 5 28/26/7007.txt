第二种情况是如果两个操作数的类型都不是浮点型，则首先 需要对这两个操作数进行整型提升。也就是说对于所有比int小 的类型，包括 char、signed char、short 和 unsigned short,都要先 转换为int类型，保证没有一个操作数是字符型或短整型。进行 整型提升之后，再按照图4.13所示的方式对操作数的类型进行 转换。
图4.12表明，如果一个操作数的类型是long double,那么需 要将另一个操作数的类型也转换成long double类型。如果一个操 作数的类型是double,那么需要把另一个操作数的类型转换成 double类型。如果一个操作数的类型是float,那么需要把另一个 操作数也转换成float类型。
要注意的是，如果一个表达式中的操作数既有整数又有浮点 数，那么要将整型转换成浮点数类型。例如，如果一个操作数的 类型为long int类型，而另一个操作数为double类型，那么就需 要将long int类型的操作数转换成double类型。
还存在一种情况，当long int类型和unsigned int类型的长度 相同时，如在32位机器上，如果一个操作数类型是long int,而 另一个操作数的类型是unsigned int,那么这两个操作数都会转换 成unsigned long int类型再计算。
long double
第二种情况是如果两个操作数的类型都不是浮点型，则首先 需要对这两个操作数进行整型提升。也就是说对于所有比int小 的类型，包括 char、signed char、short 和 unsigned short,都要先 转换为int类型，保证没有一个操作数是字符型或短整型。进行 整型提升之后，再按照图4.13所示的方式对操作数的类型进行 转换。
图4.12表明，如果一个操作数的类型是long double,那么需 要将另一个操作数的类型也转换成long double类型。如果一个操 作数的类型是double,那么需要把另一个操作数的类型转换成 double类型。如果一个操作数的类型是float,那么需要把另一个 操作数也转换成float类型。
要注意的是，如果一个表达式中的操作数既有整数又有浮点 数，那么要将整型转换成浮点数类型。例如，如果一个操作数的 类型为long int类型，而另一个操作数为double类型，那么就需 要将long int类型的操作数转换成double类型。
还存在一种情况，当long int类型和unsigned int类型的长度 相同时，如在32位机器上，如果一个操作数类型是long int,而 另一个操作数的类型是unsigned int,那么这两个操作数都会转换 成unsigned long int类型再计算。
long double
