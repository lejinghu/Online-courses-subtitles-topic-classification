我们在程序中定义过整型变量、实型变量和字符变量，这些变量中存放的都是变量 对应的内存单元中的数值，即内存单元的内容，也可以定义一种特殊的变量用于存放另 一个变量的地址，这就是指针变量。因此，指针就是地址，而指针变量就是存储地址的 变量。
在程序中使用的都是变量名，实际上是通过变量名来操作内存单元的，即对内存单 元进行读写操作。对程序编译的过程就是将变量名转换成变量地址的过程，对变量值的 存取最终都是通过变量的地址进行的。例如，语句printf(“％d”，i);的执行过程是先将变量 i转换成对应的地址，这是在编译程序时完成的，然后根据变量i的地址，假设为2000h, 找到内存中对应的存储单元，并从中取出数据，最后输出数据。在其他许多编程语言中， 变量的地址是由计算机来确定的，不需要也不允许编程人员来操作。而在C语言中，则 可以使用取地址运算符&来对变量的地址进行操作。取地址运算符&将在8.2.2小节中 介绍。
程序中每个变量都占用一个或多个内存单元，一个变量到底会占用几个内存单元是 由在定义时根据其数据类型确定的，系统会根据这个变量的数据类型来分配一定长度的 空间。与第4章介绍的C语言中的数据类型对应起来，一个char类型的数据只需要一个 内存单元就可以存放，而一个short类型的数据则需要两个相邻的内存单元来存放。
假设i是一个int类型的变量，而p是指向变量i的指针，图8.2显示了变量i和p 之间的关系。
内存单元的地址	内存单元的内容
