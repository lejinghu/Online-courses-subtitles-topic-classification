?右操作数的类型是BAZ2,它是一个指向BAZ的指针，而BAZ是一个没有限定符的 指针，它指向一个没有限定符的字符类型。
用这种方式理解这个要点有一定困难。可以用下面这个方法进行理解：
?左操作数的类型是F002,它是一个指向FOO的指针，而FOO是一个没有限定符的 指针，它指向一个带有const限定符的char类型，而且……
FOO和BAZ所指向的类型是相容的，而且它们木身都没有限定符，所以符合标准的 约束条件，两者之间进行赋值是合法的。但F002和BAZ2之间的关系又有不同，由于相 容性是不能传递的，FOO和BAZ所指向的类型相容并不表示F002和BAZ2所指向的类 型也相容，所以虽然F002和BAZ2都没有限定符，但它们之间不能进行赋值。也就是说， 它们都是不带限定符的指铲，但它们所指向的对象是不相容的，所以它们之间不能进行赋 值，也就不能分别作为函数的形参和实参。但是，这个约束条件很令人恼火，也很容易让
用户混淆。所以，这种赋值方法目前在基于Cfront的C++翻译器中是合法的（虽然这在 将来可能会改变）。
