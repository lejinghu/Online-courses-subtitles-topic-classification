程序可以包含下列通用类型的常量：整型、浮点型、字符型和字符串。这些类型将在下 面讨论。每一种类型常量的构成规则如下：
标识符中的大写和小写字母是不同的，例如，名字ABC和名字abc是不同的，标识符可以 为任意长度，但C编辑器在判断两个名字是否相同时不考虑第31个字符以后的字符。某些实现 可能会对模块间共用的标识符附加一些额外的限制。
A.3.4常置
*整型。整型常量一般写成一个数字字符串，以表示一个十进制的数，如果这个数以0开 头，则编辑器把这个数当作八进制整数，因此，常量040被当作一个八进制数，代表的 十进制数为如果你在一个数字常量前加前缀那么编译器将把它解释为十六进 制数。因此，常量OxFF对应的十进制数为255。你可以在数字串末尾加字母L,明确表 示该数字是一个长整型常量。因此常量0L等千0,但这个值是长整型的。同样，如果你 把字母U作为后缀，这个常量被当作是无符号常量，
?浮点型^ C语言中的浮点常量有小数点3因此，如果裎序中出现2.0,那么这个数在机 器内部表示为一个浮点型的值；如果程序员写成2,那么这个值将是一个整数。浮点型 常量也可以用科学计数法写成ux〇:E±;yy的形式，表示uxor乘以10的xv次方，
程序可以包含下列通用类型的常量：整型、浮点型、字符型和字符串。这些类型将在下 面讨论。每一种类型常量的构成规则如下：
标识符中的大写和小写字母是不同的，例如，名字ABC和名字abc是不同的，标识符可以 为任意长度，但C编辑器在判断两个名字是否相同时不考虑第31个字符以后的字符。某些实现 可能会对模块间共用的标识符附加一些额外的限制。
A.3.4常置
*整型。整型常量一般写成一个数字字符串，以表示一个十进制的数，如果这个数以0开 头，则编辑器把这个数当作八进制整数，因此，常量040被当作一个八进制数，代表的 十进制数为如果你在一个数字常量前加前缀那么编译器将把它解释为十六进 制数。因此，常量OxFF对应的十进制数为255。你可以在数字串末尾加字母L,明确表 示该数字是一个长整型常量。因此常量0L等千0,但这个值是长整型的。同样，如果你 把字母U作为后缀，这个常量被当作是无符号常量，
?浮点型^ C语言中的浮点常量有小数点3因此，如果裎序中出现2.0,那么这个数在机 器内部表示为一个浮点型的值；如果程序员写成2,那么这个值将是一个整数。浮点型 常量也可以用科学计数法写成ux〇:E±;yy的形式，表示uxor乘以10的xv次方，
程序可以包含下列通用类型的常量：整型、浮点型、字符型和字符串。这些类型将在下 面讨论。每一种类型常量的构成规则如下：
标识符中的大写和小写字母是不同的，例如，名字ABC和名字abc是不同的，标识符可以 为任意长度，但C编辑器在判断两个名字是否相同时不考虑第31个字符以后的字符。某些实现 可能会对模块间共用的标识符附加一些额外的限制。
A.3.4常置
*整型。整型常量一般写成一个数字字符串，以表示一个十进制的数，如果这个数以0开 头，则编辑器把这个数当作八进制整数，因此，常量040被当作一个八进制数，代表的 十进制数为如果你在一个数字常量前加前缀那么编译器将把它解释为十六进 制数。因此，常量OxFF对应的十进制数为255。你可以在数字串末尾加字母L,明确表 示该数字是一个长整型常量。因此常量0L等千0,但这个值是长整型的。同样，如果你 把字母U作为后缀，这个常量被当作是无符号常量，
?浮点型^ C语言中的浮点常量有小数点3因此，如果裎序中出现2.0,那么这个数在机 器内部表示为一个浮点型的值；如果程序员写成2,那么这个值将是一个整数。浮点型 常量也可以用科学计数法写成ux〇:E±;yy的形式，表示uxor乘以10的xv次方，
