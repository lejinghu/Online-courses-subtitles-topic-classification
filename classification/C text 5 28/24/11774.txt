指针和内存地址
对于指向函数的指针，其常见应用之一就是将它们作为参数传送给其他函 数。例如，标准C语言库在函数qsort中使用了这一方法，该函数对一个由 数据元素组成的数组执行“快速排序”。这个函数的参数之一是一个指向函数的 指针，每当qsort需要比较待排序数组中的两个元素时，就会调用该函数。采 用这一方式，qsort可用于对任意类型的数组进行排序，因为数组中任意两个 元素的比较是由用户提供的函数完成的，并不是由qsort函数本身完成的。附 录B中详细讨论了 qsort，其中包括它的一个实际应用示例。
函数指针的另一个常见应用是创建所谓的计划表（dispatch table)。我们不 能将函数本身存储在数组的元素中。但是，将函数指针存储在数组中则是有效 的。这样，就可以创建一个表格，其中包含要调用的函数指针。例如，可以创 建一个表格，用来处理由用户输入的不同命令。表中的每一项都包含命令名和 一个指针，其指向用来处理该命令的函数。现在，每当用户输入一条命令，就 可以在表中查找该命令，然后调用相应的函数来处理它。
上面对C语言中的指针进行了讨论，在结束此讨论之前，应当注意有关其 实际实现的相关细节。计算机的内存可以看作是一组顺序排列的存储单元。计 算机内存的每个单元都关联了一个编号，称为地址。通常，计算机内存的第一 个地址编号为0。在大多数计算机系统中，将一个“单元”称为一个字节。
计算机用内存存储计算机程序的指针，也用于存储与程序相关联的变量值。 因此，如果声明了一个名为count的变量，其类型为int,在执行程序时， 系统分配内存中的位置，用来保存count的值。比如，这个位置可能在计算机 内存中的地址500处。
