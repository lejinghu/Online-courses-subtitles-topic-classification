在flml函数中，定义了一个auto变量y,然后让y增1，返回y的值，因此在main函 数中输出11。在调用flml结束后，变量y的存储空间被释放。在第2次调用funl时，重新 定义变量y并赋初值1〇,然后让y增1，返回y的值，所以输出11。在以后每次调用funl 都会重新初始化y，返回11。因此每次调用flml都会输出11。
fun2 ()= fun2 ()= fun2 ()= fun2 ()= fun2 ()=
程序的运行结果分为两列，逗号左边的部分是调用函数fiml的结果，右边的部分是调 用函数flm2的结果。在主函数中，调用了 5次函数fiml和fim2。从运行结果可以看出，每 次调用fiml,结果都是11;而调用flm2,结果分别是上一个结果增1。
而在函数fim2中，定义了一个static变量z，然后z的值增1,第一次调用fun2时，z 的值为61,所以输出61。在调用fun2结束时，并不释放z的存储单元，z的值仍然是61。 在第二次调用时，不再初始化z的值，即不再执行第21行的代码，直接将z的值增1, y的值变为62,所以在第2次输出62。在以后调用flm2时，直接使用z的上一次结果，并 使z的值增1。因此每一次调用输出的结果都比上一次结果大1。
静态变量是在编译阶段赋初值的，并且只赋初值一次。在以后使用该变量时，不再赋 初值，而是使用上一次的值。而auto变量是在函数调用时赋初值，不是在编译阶段赋初值, 每次调用函数都要赋初值一次。
