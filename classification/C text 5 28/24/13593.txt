结构体变量定义	内存分配说明
} b;
这个结构占用的空间为多大呢？在VC环境下，可以得到siZe〇f(b)为24。结合上面提 到的分配空间的一些原则，分析下VC怎么样为上面的结构体变量b分配空间的。
struct MyStruct { char	y; double x; int	z ; } b;	偏移量为0,满足对齐方式，y占用1个字节； 下一个可用的地址的偏移量为1,不是sizeof(d〇uble) = 8的倍数，需要补足7个 字节才能使偏移量变为8 (满足对齐方式），因此VC自动填充7个字节，x存放 在偏移量为8的地址上，它占用8个字节 T' 一个可用的地址的偏移量为16,是sizeof(int)=4的倍数，满足int的对齐方式， 所以不需要VC自动填充，z存放在偏移量为16的地址上，它占用4个字节
所有成员变量都分配了空间，空间总的大小为1+7 + 8+4=20,不是结构体的字节边 界数（即结构体中占用最大空间的类型所占用的字节数siZe〇f(d〇uble)=8)的倍数，所以 需要填充4个字节，以满足结构体变量b所占内存空间的大小为sizeof(double)=8的倍数。
结构体变量定义	内存分配说明
} b;
这个结构占用的空间为多大呢？在VC环境下，可以得到siZe〇f(b)为24。结合上面提 到的分配空间的一些原则，分析下VC怎么样为上面的结构体变量b分配空间的。
struct MyStruct { char	y; double x; int	z ; } b;	偏移量为0,满足对齐方式，y占用1个字节； 下一个可用的地址的偏移量为1,不是sizeof(d〇uble) = 8的倍数，需要补足7个 字节才能使偏移量变为8 (满足对齐方式），因此VC自动填充7个字节，x存放 在偏移量为8的地址上，它占用8个字节 T' 一个可用的地址的偏移量为16,是sizeof(int)=4的倍数，满足int的对齐方式， 所以不需要VC自动填充，z存放在偏移量为16的地址上，它占用4个字节
所有成员变量都分配了空间，空间总的大小为1+7 + 8+4=20,不是结构体的字节边 界数（即结构体中占用最大空间的类型所占用的字节数siZe〇f(d〇uble)=8)的倍数，所以 需要填充4个字节，以满足结构体变量b所占内存空间的大小为sizeof(double)=8的倍数。
