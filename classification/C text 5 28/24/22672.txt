相对于C语言而言，这是一个小小的飞跃。在C语言中，只能使用赋值符号在变量定义 时对它进行初始化，或干脆使它保持未初始化状态。可以在C++的类中声明多个构造函数，
构造函数和析构函数
绝大多数类至少具有一个构造函数。当类的一个对象被创建时，构造函数被隐式地调用， 它负责对象的初始化。与之相对应，类也存在一个清理函数，称为析构函数。当对象被销毁 (超出其生存范围或进行delete操作，回收它所使用的堆内存）时，析构函数被自动调用。析 构函数不如构造函数常用，它里面的代码一般用于处理一些特殊的终止要求以及垃圾收集等。 有些人把析构函数当作一科保险方法来确保当对象离开适当的范围时，同步锁总能够被释放。 所以他们不仅清除对象，还清理对象所持有的锁。构造函数和析构函数是非常需要的，因为 类外部的任何函数都不能访问类的private数据成员。因此，你需要类内部有一个特权函数来 创建一个对象并对其进行初始化。
通过参数来区分它们。构造函数的名字总是和类的名字-样：
Classnaine : ： Classnairie： (arguments) {???);
