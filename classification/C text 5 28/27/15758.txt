例如整型、浮点型、布尔型以及第9章中将会介绍的字符型可以组成原子数据，因为它们不能 分解为更小的数据。而像字符串型（string)就不是原子数据，因为它由独立的字符组成。因_ 此可以用关系运算符比较int、double或bool型数据，但不能用这些运算符比较string型 数据。在第5章中将介绍比较字符串的机制。
要小心避免犯这样的错误。在输入程序时稍加注意将节省大量的调试时间。
关系运算符只能用来比较原子数据（atomic data)值一不能再分解成更小的部分的数据。
4.3.2逻辑运算符
除了关系运算符外（它取任何类型的原子值并产生布尔型的结果），C语言还定义了三个 运算符，它们的操作数为布尔型的值，把它们组合起来形成另一个布尔值：
例如整型、浮点型、布尔型以及第9章中将会介绍的字符型可以组成原子数据，因为它们不能 分解为更小的数据。而像字符串型（string)就不是原子数据，因为它由独立的字符组成。因_ 此可以用关系运算符比较int、double或bool型数据，但不能用这些运算符比较string型 数据。在第5章中将介绍比较字符串的机制。
要小心避免犯这样的错误。在输入程序时稍加注意将节省大量的调试时间。
关系运算符只能用来比较原子数据（atomic data)值一不能再分解成更小的部分的数据。
4.3.2逻辑运算符
除了关系运算符外（它取任何类型的原子值并产生布尔型的结果），C语言还定义了三个 运算符，它们的操作数为布尔型的值，把它们组合起来形成另一个布尔值：
例如整型、浮点型、布尔型以及第9章中将会介绍的字符型可以组成原子数据，因为它们不能 分解为更小的数据。而像字符串型（string)就不是原子数据，因为它由独立的字符组成。因_ 此可以用关系运算符比较int、double或bool型数据，但不能用这些运算符比较string型 数据。在第5章中将介绍比较字符串的机制。
要小心避免犯这样的错误。在输入程序时稍加注意将节省大量的调试时间。
关系运算符只能用来比较原子数据（atomic data)值一不能再分解成更小的部分的数据。
4.3.2逻辑运算符
除了关系运算符外（它取任何类型的原子值并产生布尔型的结果），C语言还定义了三个 运算符，它们的操作数为布尔型的值，把它们组合起来形成另一个布尔值：
例如整型、浮点型、布尔型以及第9章中将会介绍的字符型可以组成原子数据，因为它们不能 分解为更小的数据。而像字符串型（string)就不是原子数据，因为它由独立的字符组成。因_ 此可以用关系运算符比较int、double或bool型数据，但不能用这些运算符比较string型 数据。在第5章中将介绍比较字符串的机制。
要小心避免犯这样的错误。在输入程序时稍加注意将节省大量的调试时间。
关系运算符只能用来比较原子数据（atomic data)值一不能再分解成更小的部分的数据。
4.3.2逻辑运算符
除了关系运算符外（它取任何类型的原子值并产生布尔型的结果），C语言还定义了三个 运算符，它们的操作数为布尔型的值，把它们组合起来形成另一个布尔值：
例如整型、浮点型、布尔型以及第9章中将会介绍的字符型可以组成原子数据，因为它们不能 分解为更小的数据。而像字符串型（string)就不是原子数据，因为它由独立的字符组成。因_ 此可以用关系运算符比较int、double或bool型数据，但不能用这些运算符比较string型 数据。在第5章中将介绍比较字符串的机制。
要小心避免犯这样的错误。在输入程序时稍加注意将节省大量的调试时间。
关系运算符只能用来比较原子数据（atomic data)值一不能再分解成更小的部分的数据。
4.3.2逻辑运算符
除了关系运算符外（它取任何类型的原子值并产生布尔型的结果），C语言还定义了三个 运算符，它们的操作数为布尔型的值，把它们组合起来形成另一个布尔值：
例如整型、浮点型、布尔型以及第9章中将会介绍的字符型可以组成原子数据，因为它们不能 分解为更小的数据。而像字符串型（string)就不是原子数据，因为它由独立的字符组成。因_ 此可以用关系运算符比较int、double或bool型数据，但不能用这些运算符比较string型 数据。在第5章中将介绍比较字符串的机制。
要小心避免犯这样的错误。在输入程序时稍加注意将节省大量的调试时间。
关系运算符只能用来比较原子数据（atomic data)值一不能再分解成更小的部分的数据。
4.3.2逻辑运算符
除了关系运算符外（它取任何类型的原子值并产生布尔型的结果），C语言还定义了三个 运算符，它们的操作数为布尔型的值，把它们组合起来形成另一个布尔值：
