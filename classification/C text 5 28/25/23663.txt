与面向数学运算的计算机相比，8051系列单片机对变量类型或数据类型的选择更具有关 键性的意义。在表3-1所列出的数据类型中，只有bit和unsigned char两种数据类型可以直接 支持机器指令。对于C这样的高级语言，不管使用何种数据类型，虽然某一行程序从字面上 看，其操作十分简单，然而,实际上C系统的编译器需要用一系列机器指令对其进行复杂的变 量类型、数据类型的处理。特别是当使用浮点变量时，将明显地增加运算时间和程序的长度。当 程序必须保证运算精度时，C编译器将调用相应的子程序库,把它们加到程序中去。然而许多 不熟练的程序员，在编写C程序时往往会使用大量的、不必要的变量类型。这将导致C编译器 相应地增加所调用的库函数的数量，以处理大量增加的变量类型。这最终会使程序变得过于宠 大，运行速度减慢，甚至因此会在连接(link)时，出现因程序过大而装不进代码区的情况。所以 必须特别慎重地进行变量和数据类型的选择。
在程序中variable和result就是变量，它们的数据类型为整型(int)。
注意:符号常量与变量的区别在于，符号常量的值在其作用域(本例中为主函数）中，不能 改变，也不能用等号賦值。习惯上，总将符号常量名用大写，变量用小写，以示区别。
位变量(bit)—变量的类型是位，位变量的值可以是Ktrue)或(Kfalse),与8051硬件特 性操作有关的位变量必须定位在8051 CPU片内存贮区(RAM)的可位寻址空间中。
字符变量(char)——字符变量的长度为1 byte即8位。这很适合8051单片机，因为8051 单片机每次可处理8位数据。除非指明是有符号变量(signed char)，字符变量的值域范围是0 ?255(无符号）?对于有符号的变量，最具有重要意义的位是最高位上的符号标志位(msb),在 此位上，1代表“负”，0代表“正”。有符号字符变量(signed char)和无符号字符变量(unsigned char)在表示0?127的数值时，其含义是一样的都是0?0x7f。负数一般用补码表示，即用 11111111表示一1，用11111110表示一2…。有趣的是，这与二进制计算中，用0减1和用〇减 2所得的结果是一样的。当进行乘除法运算时，符号问题就变得十分复杂，而C编译器会自动 地将相应的库函数调入程序中来解决这个问题。
