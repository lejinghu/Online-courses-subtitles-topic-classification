将一个整型变量赋值给浮点变量不会导致数值的任何变化；该数值将被系 统直接转换，并存储在浮点变量中。程序输出的第二行证实，i2的值(-150)被 正确转换，并存储在float变量fl中。
123.125000 assigned to an int produces 123 -150 assigned to a float produces -150.000000 -150 divided by 100 produces -1.000000 -150 divided by 100.0 produces -1.500000 (float) -150 divided by 100 produces -1.500000
在c语言中，只要将一个浮点数赋值给一个整型变量，浮点数的小数部分 就会被截断。因此，在上面的例子中，当fl的值被赋给il时，数值123.125 被截断，也就是说，只有它的整数部分123被存储在il中。程序输出的第一 行证实了确实如此。
程序的随后两行输出说明了在组成算术表达式时必须记住的两点。第一点 与本章前面讨论的整数算术有关。只要一个表达式的两个操作数是整数（同样 适用于short、unsigned、long和long long),该运算将根据整数算术 法则执行。因此，除法运算得到的所有小数部分都会被丢弃，即使像程序3.5 中所做的那样，将结果赋值给一个浮点变量时也是如此。因此，当整型变量i2 除以整数常量100时，系统将该除法作为整数除法执行。因此，在float变 量fl中存储的数值就是将-150除以100的结果，也就是-1。
下一个除法涉及一个整型变量和一个浮点常量。在C语言中，如果两个数 值中的任意一个为浮点变量或常数，那么这两个数值之间的所有运算都将作为 浮点运算执行。因此，当i2的值除以100.0时，系统将此除法当作浮点除法， 得出结果-1.5,然后将它赋给float变量fl。
