C语言规定:app + 1指向数组首地址的下一个元素，而不是将指针变量app的值简单地 加1。例如，若数组的类型是浮点型(float),每个数组元素占4个字节，则对于浮点型指针变量 app来说，app + 1意味着使app的原值(地址)加4个字节，以使它指向下一个元素。一般来 说，app+i所代表的地址实际上是aPP+iXd，d是一个数组元素在内存中所占字节数（由元素 的类型来确定;如对于整型d = 2,对实型d = 4,对字符型d=l)。
3.	指向数组的指针变量可以带下标，如app[i]与 * (app+i)等价。
要特别注意对app+i的含义的理解！	图5_8
例设一个整型数组a，有十个元素。要求输出全部元素的值。
解要输出数组的全部元素的值有三种方法：
C语言规定:app + 1指向数组首地址的下一个元素，而不是将指针变量app的值简单地 加1。例如，若数组的类型是浮点型(float),每个数组元素占4个字节，则对于浮点型指针变量 app来说，app + 1意味着使app的原值(地址)加4个字节，以使它指向下一个元素。一般来 说，app+i所代表的地址实际上是aPP+iXd，d是一个数组元素在内存中所占字节数（由元素 的类型来确定;如对于整型d = 2,对实型d = 4,对字符型d=l)。
3.	指向数组的指针变量可以带下标，如app[i]与 * (app+i)等价。
要特别注意对app+i的含义的理解！	图5_8
例设一个整型数组a，有十个元素。要求输出全部元素的值。
解要输出数组的全部元素的值有三种方法：
