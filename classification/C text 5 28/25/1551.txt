浮点型的存储方式和其他类型有很大不同，而不同编译器之间也存在差别，但大部分都遵 从IEEE数值标准。下面以Linux下的GCC 3.2.2的实现为例，讨论浮点型的存储方式。
#细心的读者也许会说：即使f_max和f_min在第10位就出错，但是其偏差值小于10的 31次方，而d_max和d_min实际的偏差值比10的4900次方还大；因此，double型精 确度远不如float型。这个问题是浮点型的存储方式导致的，在讨论浮点型的有效位数 时，不需要考虑它的指数，因为在浮点型的存储中，两者是分开的。	>
4.3.6存储方式
浮点型数值以科学计数法的表示形式存储在内存中。所有的数值都可以使用科学计数法， 表示为基数只含一个整数位且该位不为0的十进制的指数形式。例如，十进制数123 456 789, 可以表示为1.234 567 89xl09，其中，1.234 567 89为基数,9为指数;0.243可以表示为2.43XKT1, 2.43为基数，-1为指数。同样，所有的数值也可以使用科学计数法表示为二进制的指数形式。 例如，8的二进制形式为1000,可以使用科学计数法表示为lx23; 0.625的二进制形式为0.101, 可以使用科学计数法表示为1.01x2H。
浮点型的内存形式包含三个部分。
