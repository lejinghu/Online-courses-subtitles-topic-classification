1
00:00:00,000 --> 00:00:07,430
好，那下面我们就先来看一下C程序设计语言中的数据成分。

2
00:00:07,430 --> 00:00:13,380
在跟大家介绍数据成分之前啊，我们先来讨论这么一个问题：

3
00:00:13,380 --> 00:00:19,330
什么问题呢？关于内存。

4
00:00:19,330 --> 00:00:28,135
因为数据成分这部分的很多知识啊， 跟内存这个概念有比较多的联系。

5
00:00:28,135 --> 00:00:33,480
所以呢，我希望大家在真正开始学习数据部分的相关知识之前，

6
00:00:33,480 --> 00:00:41,405
先来确认一下我们关于内存的一些认识。我希望大家呀，

7
00:00:41,405 --> 00:00:49,330
按照这样一种方式来想象计算机的内存。你就把内存啊，想象成一条

8
00:00:49,330 --> 00:00:54,900
长长长长的带子。在这个带子上面呢，有很多的小方格，

9
00:00:54,900 --> 00:01:00,545
每一个小方格都是一个存储单元。

10
00:01:00,545 --> 00:01:06,190
那这个存储单元有多大呢？它有8位。比方说这个存储单元里头，

11
00:01:06,190 --> 00:01:12,340
好，我把它分解开来了，它有8位：1,2,3,4,5,6,7,

12
00:01:12,340 --> 00:01:18,490
8。8位，每一位呢，存放一个二进制的数。

13
00:01:18,490 --> 00:01:23,035
内存里头每一个小方格都是一个存储单元。

14
00:01:23,035 --> 00:01:27,580
每一个存储单位的大小呢，是8位，8个bit。

15
00:01:27,580 --> 00:01:32,220
然后这8位连起来，组成一个存储单元。

16
00:01:32,220 --> 00:01:40,100
这一个存储单元的大小我们把它称为一个Byte。
一个字节，字节。

17
00:01:40,100 --> 00:01:47,870
然后呢我们还讲过一些数量单位。比方说，1KB它就等于1024个字节。

18
00:01:47,870 --> 00:01:55,080
1M呢，等于1024K，1G呢等于1024M，1T等于1024G，等等等等。

19
00:01:55,080 --> 00:02:02,030
打一个比方的话，我希望你把内存想象成啊，火车道。

20
00:02:02,030 --> 00:02:08,980
在这条火车道上，有很多很多的小方格，每个小方格都是一个字节，一个字节里面含了8位。

21
00:02:08,980 --> 00:02:13,095
然后呢，每一个小方格啊，都有它对应的

22
00:02:13,095 --> 00:02:17,210
地址。比如说这个小方格它对应的地址有可能是这个。

23
00:02:17,210 --> 00:02:22,380
一般呢，在计算机里头我们用16进制的字符

24
00:02:22,380 --> 00:02:27,550
来表示一个地址。没关系，如果听不懂的话没关系。只需要你了解

25
00:02:27,550 --> 00:02:35,550
内存是一条长长长长的火车道。然后上面的每一个小方格都有一个相应的

26
00:02:35,550 --> 00:02:40,825
地址，每一个小方格都有一个地址。你只要能这么想，

27
00:02:40,825 --> 00:02:46,100
我觉得就可以了。有了对内存的这个认识之后，我们再来讨论数据成分，就

28
00:02:46,100 --> 00:02:50,150
方便得多了。先来看一个程序，

29
00:02:50,150 --> 00:02:57,850
啊，这个程序大家是最熟悉不过的了，就是在我们这个课上跟大家反复提起的第一个程序。

30
00:02:57,850 --> 00:03:03,350
那么在这个程序里头，主要的数据成分在哪儿呢？

31
00:03:03,350 --> 00:03:08,850
在这儿。关于数据的定义。

32
00:03:08,850 --> 00:03:13,610
这是数据成分里边的一个很重要的内容。那么在

33
00:03:13,610 --> 00:03:18,370
这个程序里头我们定义了一个数组，也定义了一些变量。

34
00:03:18,370 --> 00:03:23,990
变量是一个程序中最基础的数据成分了。所以我们从

35
00:03:23,990 --> 00:03:31,990
变量的定义开始我们对数据成分的了解。好，那下面我们就先从了解变量开始。

36
00:03:31,990 --> 00:03:37,590
什么是变量呢？顾名思义，所谓变量就是指

37
00:03:37,590 --> 00:03:43,190
在程序的运行过程中，值可以变化的那些量。就像以前我们所讲的，

38
00:03:43,190 --> 00:03:48,820
它就相当于我们以前做数学应用题里头设的那些未知数。

39
00:03:48,820 --> 00:03:56,160
设x啊，y啊，为”什么什么什么什么“。就相当于这些未知数。就是变量。

40
00:03:56,160 --> 00:04:03,470
变量怎么去定义呢？大家都写过程序了，也都知道。那变量定义的格式呢，包含了两个部分：

41
00:04:03,470 --> 00:04:09,550
给出变量的类型，然后给一个变量的标识符。比方说我们想定义一个整型的变量，

42
00:04:09,550 --> 00:04:15,630
我们就可以 int Max; int呢，是变量的类型，

43
00:04:15,630 --> 00:04:22,080
啊，是整数型。Max呢，是变量的名字，啊，也就是变量的标识符。那只要有

44
00:04:22,080 --> 00:04:28,530
了这两个部分，其实这个变量的定义啊就已经差不多完成了。那么在之前呢，我们一直跟大家强调，

45
00:04:28,530 --> 00:04:33,785
最好大家在定义变量的时候啊，就给它赋予一个初始值。

46
00:04:33,785 --> 00:04:39,040
啊，比方说我们去定义Max的时候，我们紧接着去写上Max就等于0。

47
00:04:39,040 --> 00:04:44,640
给它赋予一个初始值。这是一个非常非常好的编程的习惯。

48
00:04:44,640 --> 00:04:50,240
因为忘记赋初始值的话，会对程序的正确性造成影响，待会我们再说。

49
00:04:50,240 --> 00:04:55,905
这是变量的定义方式。无论你想定义什么类型的变量，都可以按照这种格式来进行。

50
00:04:55,905 --> 00:05:01,570
比方说char类型的，啊，比方说double类型的，都可以按照这种方式来定义。

51
00:05:01,570 --> 00:05:05,650
这儿需要强调的就是，在C程序里头，

52
00:05:05,650 --> 00:05:09,730
所有的变量必须要先定义，

53
00:05:09,730 --> 00:05:16,305
然后才能使用。不定义的变量是不能够直接使用的。有的同学就说

54
00:05:16,305 --> 00:05:22,880
这不是显然嘛，都是这样的。不，在有一些程序设计语言里头啊，允许你使用一些未定义的变量。

55
00:05:22,880 --> 00:05:28,930
特别是一些比较新的程序设计语言，它允许你这么干。但是在C程序设计语言里头，

56
00:05:28,930 --> 00:05:37,240
必须要先定义一个变量，然后才能使用。
那么，当我们在程序中写下了一个

57
00:05:37,240 --> 00:05:41,820
变量定义的语句，这对于计算机而言又意味着

58
00:05:41,820 --> 00:05:46,435
什么呢？这句变量定义

59
00:05:46,435 --> 00:05:51,050
它能起什么作用呢？比方说在这个程序里头，

60
00:05:51,050 --> 00:05:56,680
我们定义了一个变量叫int max等于0，这样一个变量。

61
00:05:56,680 --> 00:06:04,140
那么当计算机程序执行到这个地方的时候，它会做些什么呢？也就是说，

62
00:06:04,140 --> 00:06:11,600
当我们写下了一个变量的定义的时候它又意味着什么呢？它的含义是什么呢？

63
00:06:11,600 --> 00:06:17,585
我们就来解释一下。看这！这个呢，就是刚才我们让大家

64
00:06:17,585 --> 00:06:23,570
想象过的那个内存。内存呢，是一条长长长长的火车道。

65
00:06:23,570 --> 00:06:30,520
啊，上面呢，有很多很多的格子，每一个格子都是一个存储单元。然后每一个存储单元

66
00:06:30,520 --> 00:06:37,470
都有一个地址。那么，当我们在程序里头定义了一个变量，比方说我们定义了

67
00:06:37,470 --> 00:06:45,470
这样一个变量，int max=0，我们定义了这样一个变量。

68
00:06:45,470 --> 00:06:49,870
那么计算机执行到这句变量定义的时候它会做些什么呢？

69
00:06:49,870 --> 00:06:54,270
当然我们在这儿先不去讨论编译执行和解释执行的问题。

70
00:06:54,270 --> 00:07:01,190
我只希望给大家一个印象。那么当计算机执行到你的这句程序

71
00:07:01,190 --> 00:07:08,110
的时候啊，它会这么做，计算机啊，会在它的内存里头

72
00:07:08,110 --> 00:07:13,950
找到一片存储空间，所谓存储空间就是说，

73
00:07:13,950 --> 00:07:21,225
找到几个 连续的存储单元。那到底几个呢？待会我们再说。

74
00:07:21,225 --> 00:07:26,730
找到这片存储空间以后，给这片存储空间起一个名字，

75
00:07:26,730 --> 00:07:30,860
叫做max，然后把你所定义的这个变量的

76
00:07:30,860 --> 00:07:34,990
初始值放到这片存储空间里头来。

77
00:07:34,990 --> 00:07:41,815
并且呢，记下这个名字和这片连续的

78
00:07:41,815 --> 00:07:48,640
存储空间的起始的地址之间的这个对应关系。把这个对应关系记下来。

79
00:07:48,640 --> 00:07:55,970
这就是计算机所做的事情。那么完成了这样一个过程以后你就能做些什么了呢？

80
00:07:55,970 --> 00:08:03,140
当你在程序里头再次提到max的时候，计算机就明白，

81
00:08:03,140 --> 00:08:10,310
哦，你指的是这片存储空间。当你再给max重新赋值，比方说max等于

82
00:08:10,310 --> 00:08:15,025
8，重新赋值。这个时候呢，

83
00:08:15,025 --> 00:08:19,740
计算机就明白，哦，你要在这个存储空间里面，不再存

84
00:08:19,740 --> 00:08:26,610
放0了，把它存放8。你就可以通过这种方式

85
00:08:26,610 --> 00:08:33,480
来使用这个变量了。这就是当你写下一个变量定义的语句，

86
00:08:33,480 --> 00:08:40,960
计算机在执行这个语句的时候所要做的事情。那么说到这儿呢，我相信大家对变量

87
00:08:40,960 --> 00:08:47,820
应该有一个初步的一个认识了。有了这样一个认识以后呢，我们再去讨论一些问题就会变得容易了。

88
00:08:47,820 --> 00:08:54,225
那么，既然我可以在计算机里头定义一些变量，比方说在这个程序里头，我会定义一些

89
00:08:54,225 --> 00:09:00,630
变量，我可以在C程序里头定义哪些类型的变量呢？这些

90
00:09:00,630 --> 00:09:07,425
变量之间又有什么不同呢？下面我们就来介绍一下。正如我们

91
00:09:07,425 --> 00:09:14,220
跟大家提到过的，其实在C或者C++程序中啊，基本的数据类型

92
00:09:14,220 --> 00:09:22,050
还真没多少。比方说我们给大家看过这样一张表，在C++里头啊基本的数据类型包含了

93
00:09:22,050 --> 00:09:28,845
布尔型，字符型，整型，实型。这是基本的数据类型。

94
00:09:28,845 --> 00:09:35,640
那么利用这些基本的数据类型呢，还可以定义一些复杂的数据类型，比方说数组型，

95
00:09:35,640 --> 00:09:42,570
结构体型，联合体型，枚举型，指针型，类，等等。那么除此之外呢，

96
00:09:42,570 --> 00:09:49,500
还有一个空类型。那么这次课呢，我们就跟大家逐一地介绍一下这些基本的数据类型。

97
00:09:49,500 --> 00:09:56,445
我们先来跟大家介绍一下整型，其次呢是实型，再次

98
00:09:56,445 --> 00:10:03,390
是字符型，最后我们说一下布尔型。OK，我们来看一下整型。

